OASISFormat:      0.4
Name:             lacaml
Version:          8.0.7
Synopsis:         OCaml-bindings to BLAS and LAPACK.
Description:      This library interfaces the BLAS-library (Basic Linear Algebra Subroutines) and LAPACK-library (Linear Algebra routines), which are written in FORTRAN.
Authors:          Egbert Ammicht <eammicht@lucent.com>,
                  Patrick Cousot <Patrick.Cousot@ens.fr>,
                  Sam Ehrlichman <sehrlichman@janestreet.com>,
                  Florent Hoareau <h.florent@gmail.com>,
                  Markus Mottl <markus.mottl@gmail.com>,
                  Liam Stewart <liam@cs.toronto.edu>,
                  Christophe Troestler <Christophe.Troestler@umons.ac.be>,
                  Oleg Trott <ot14@columbia.edu>,
                  Martin Willensdorfer <ma.wi@gmx.at>
Maintainers:      Markus Mottl <markus.mottl@gmail.com>,
                  Christophe Troestler <Christophe.Troestler@umons.ac.be>
Copyrights:       (C) 2000-2012 Egbert Ammicht <eammicht@lucent.com>,
                  (C) 2000-2012 Patrick Cousot <Patrick.Cousot@ens.fr>,
                  (C) 2000-2012 Jane Street Capital LLC <opensource@janestreet.com>,
                  (C) 2000-2016 Markus Mottl <markus.mottl@gmail.com>,
                  (C) 2000-2012 Liam Stewart <liam@cs.toronto.edu>,
                  (C) 2000-2014 Christophe Troestler <Christophe.Troestler@umons.ac.be>,
                  (C) 2000-2012 Oleg Trott <ot14@columbia.edu>
License:          LGPL-2.1+ with OCaml linking exception
OCamlVersion:     >= 3.12
FindlibVersion:   >= 1.5
Homepage:         http://mmottl.github.io/lacaml
#Categories:
FilesAB:          lib/lacaml_version.ml.ab

Plugins:          META (0.4), StdFiles (0.4), DevFiles (0.4)
XStdFilesREADME:  false

PostConfCommand:  ocaml make_prec_dep.ml

BuildTools:       ocamlbuild, ocamldoc

Flag strict
  Description:    Strict compile-time checks
  Default:        true

# Many files are generated by the post-configure script.
# There are special rules for generating C code in myocamlbuild.ml
Library lacaml
  Path:          lib
  Modules:       Lacaml, Lacaml_common, Lacaml_io,
                 Lacaml_S, Lacaml_D, Lacaml_C, Lacaml_Z,
                 Lacaml_utils, Lacaml_version,
                 Lacaml_float32, Lacaml_float64,
                 Lacaml_complex32, Lacaml_complex64
  InternalModules:
                 Lacaml_real_io, Lacaml_complex_io,
                 Lacaml_impl4_S, Lacaml_impl4_D, Lacaml_impl4_C, Lacaml_impl4_Z,
                 Lacaml_impl2_S, Lacaml_impl2_D, Lacaml_impl2_C, Lacaml_impl2_Z,
                 Lacaml_vec4_S, Lacaml_vec4_D, Lacaml_vec4_C, Lacaml_vec4_Z,
                 Lacaml_vec2_S, Lacaml_vec2_D, Lacaml_vec2_C, Lacaml_vec2_Z,
                 Lacaml_mat4_S, Lacaml_mat4_D, Lacaml_mat4_C, Lacaml_mat4_Z,
                 Lacaml_mat2_S, Lacaml_mat2_D, Lacaml_mat2_C, Lacaml_mat2_Z
  CSources:      impl_c.c,
                 utils_c.c,
                 vec2_S_c.c, vec2_D_c.c, vec2_C_c.c, vec2_Z_c.c,
                 vec4_S_c.c, vec4_D_c.c, vec4_C_c.c, vec4_Z_c.c,
                 mat2_S_c.c, mat2_D_c.c, mat2_C_c.c, mat2_Z_c.c,
                 mat4_S_c.c, mat4_D_c.c, mat4_C_c.c, mat4_Z_c.c,
                 impl2_S_c.c, impl2_D_c.c, impl2_C_c.c, impl2_Z_c.c,
                 impl4_S_c.c, impl4_D_c.c, impl4_C_c.c, impl4_Z_c.c,
                 exp10.c,
                 f2c.h,
                 lacaml_macros.h,
                 utils_c.h
  BuildDepends:  bigarray, bytes
  # Linux specific: gnu99 is required to have nanosleep, others can just use c99 standard
  if system(linux) || system(linux_elf)
    CCOpt:      -g -std=gnu99 -O2 -fPIC -DPIC
  else
    CCOpt:      -g -std=c99 -O2 -fPIC -DPIC
  if flag(strict) && ccomp_type(cc)
    CCOpt+:      -Wall -pedantic -Wextra -Wunused -Wno-long-long
  CCLib:         -lblas -llapack
  if system(macosx)
    CCOpt+:      -DEXTERNAL_EXP10
    CCLib:       -framework Accelerate
  # FIXME: mingw is untested!!!
  if system(mingw64)
    CCOpt+:      -DEXTERNAL_EXP10 -DWIN32

Library lacaml_top
  Path:             lib
  FindlibName:      top
  FindlibParent:    lacaml
  Modules:          Install_printers
  XMETARequires:    lacaml
  XMETADescription: Toplevel module for Lacaml.


# Examples

Flag examples
  Description:    Build examples
  Default:        true

Executable blas
  Path:           examples/blas
  MainIs:         blas.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable eig
  Path:           examples/eig
  MainIs:         eig.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable sbev
  Path:           examples/eig
  MainIs:         sbev.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable sbgv
  Path:           examples/eig
  MainIs:         sbgv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable lin_eq
  Path:           examples/lin_eq
  MainIs:         lin_eq.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable gbsv
  Path:           examples/lin_eq
  MainIs:         gbsv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable lin_eq_comp
  Path:           examples/lin_eq_comp
  MainIs:         lin_eq_comp.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable lin_reg
  Path:           examples/lin_reg
  MainIs:         lin_reg.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable qr
  Path:           examples/qr
  MainIs:         qr.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable svd
  Path:           examples/svd
  MainIs:         svd.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

# NAG example (http://www.nag.com/lapack-ex/lapack-ex.html)

Executable nag_gbsv
  Path:           examples/nag
  MainIs:         nag_gbsv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_gesv
  Path:           examples/nag
  MainIs:         nag_gesv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_gtsv
  Path:           examples/nag
  MainIs:         nag_gtsv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_pbsv
  Path:           examples/nag
  MainIs:         nag_pbsv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_posv
  Path:           examples/nag
  MainIs:         nag_posv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_ppsv
  Path:           examples/nag
  MainIs:         nag_ppsv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_ptsv
  Path:           examples/nag
  MainIs:         nag_ptsv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_spsv
  Path:           examples/nag
  MainIs:         nag_spsv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable nag_sysv
  Path:           examples/nag
  MainIs:         nag_sysv.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

# Florent

Executable schur_real
  Path:           examples/schur
  MainIs:         schur_real.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable schur_complex
  Path:           examples/schur
  MainIs:         schur_complex.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

Executable shuffle
  Path:           examples/shuffle
  MainIs:         shuffle.ml
  Build$:         flag(examples)
  BuildDepends:   lacaml
  Install:        false
  CompiledObject: best

#

Document API
  Title:                API reference for Lacaml
  Type:                 OCamlbuild (0.4)
  InstallDir:           $docdir/api
  XOCamlbuildPath:      .
  XOCamlbuildLibraries: lacaml

SourceRepository head
  Type:       Git
  Location:   https://github.com/mmottl/lacaml.git
  Browser:    https://github.com/mmottl/lacaml
  Tag:        v$(pkg_version)
